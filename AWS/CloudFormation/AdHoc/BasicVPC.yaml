AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a VPC, subnets, and security groups

Parameters:
  VpcCidr:
    Type: String
    Description: CIDR block for the VPC
  VpcName:
    Type: String
    Description: Name of the VPC
  PublicSubnetCidr:
    Type: String
    Description: CIDR block for the public subnet
  PrivateSubnetCidr:
    Type: String
    Description: CIDR block for the private subnet
  SubnetAz:
    Type: String
    Description: Availability Zone for the subnets
  RetentionPolicy:
    Type: String
    AllowedValues: [Delete, Retain]
    Default: Delete
    Description: Retention policy for stack resources
  CreateS3Endpoint:
    Type: String
    AllowedValues: [true, false]
    Default: false
    Description: Whether to create an S3 VPC endpoint

Conditions:
  CreateS3EndpointCondition: !Equals [!Ref CreateS3Endpoint, "true"]

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Ref VpcName
    DeletionPolicy: !Ref RetentionPolicy

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${VpcName}-IGW"
    DeletionPolicy: !Ref RetentionPolicy

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
    DeletionPolicy: !Ref RetentionPolicy

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Ref SubnetAz
      Tags:
        - Key: Name
          Value: !Sub "${VpcName}-Public"
    DeletionPolicy: !Ref RetentionPolicy

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Ref SubnetAz
      Tags:
        - Key: Name
          Value: !Sub "${VpcName}-Private"
    DeletionPolicy: !Ref RetentionPolicy

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Public subnet SG
      GroupName: !Sub "${VpcName}-Public-SG"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VpcName}-Public-SG"
    DeletionPolicy: !Ref RetentionPolicy

  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Private subnet SG
      GroupName: !Sub "${VpcName}-Private-SG"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VpcName}-Private-SG"
    DeletionPolicy: !Ref RetentionPolicy

  PublicSGIngressFromPrivate:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref PublicSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref PrivateSecurityGroup
      Description: From Private
    DeletionPolicy: !Ref RetentionPolicy

  PublicSGIngressFromPublic:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref PublicSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref PublicSecurityGroup
      Description: From Public
    DeletionPolicy: !Ref RetentionPolicy

  PublicSGEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref PublicSecurityGroup
      IpProtocol: -1
      CidrIp: 0.0.0.0/0
      Description: Allow all
    DeletionPolicy: !Ref RetentionPolicy

  PrivateSGEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref PrivateSecurityGroup
      IpProtocol: -1
      CidrIp: 0.0.0.0/0
      Description: Allow all
    DeletionPolicy: !Ref RetentionPolicy

  PrivateSGIngressFromPrivate:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref PrivateSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref PrivateSecurityGroup
      Description: From Private
    DeletionPolicy: !Ref RetentionPolicy

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VpcName}-Public-RT"
    DeletionPolicy: !Ref RetentionPolicy

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${VpcName}-Private-RT"
    DeletionPolicy: !Ref RetentionPolicy

  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
    DeletionPolicy: !Ref RetentionPolicy

  PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable
    DeletionPolicy: !Ref RetentionPolicy

  PublicRtInternetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
    DeletionPolicy: !Ref RetentionPolicy

  S3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Condition: CreateS3EndpointCondition
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref PublicRouteTable
        - !Ref PrivateRouteTable
      Tags:
        - Key: Name
          Value: !Sub "${VpcName}-S3-Endpoint"
    DeletionPolicy: !Ref RetentionPolicy
